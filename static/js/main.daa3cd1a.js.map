{"version":3,"file":"static/js/main.daa3cd1a.js","mappings":"mBACAA,SAASC,eAAe,gBAAgBC,iBAAiB,UAAUC,UAC/DC,EAAEC,iBACF,MAAMC,EAAON,SAASC,eAAe,QAAQM,MACvCC,EAAQR,SAASC,eAAe,SAASM,MACzCE,QAAiBC,MAAM,iBAADC,OAAkBL,EAAI,WAAAK,OAAUH,IACtDI,QAAaH,EAASI,OAG5B,GAAIJ,EAASK,GAAI,CACbd,SAASC,eAAe,cAAcc,UAAS,cAAAJ,OAAiBL,EAAI,MAAAK,OAAKH,GACzER,SAASC,eAAe,eAAec,UAAS,GAAAJ,OAAMC,EAAKI,aAC3DhB,SAASC,eAAe,eAAec,UAAS,gBAAAJ,OAAmBC,EAAKK,YAAW,SACnFjB,SAASC,eAAe,cAAcc,UAAS,eAAAJ,OAAkBC,EAAKM,WAAU,QAEhF,MAAMF,EAAcJ,EAAKI,YACnBG,EAAcnB,SAASC,eAAe,gBAGxCe,EAAYI,SAAS,WACrBD,EAAYE,IAAM,qBAClBF,EAAYG,IAAM,YACXN,EAAYI,SAAS,QAC5BD,EAAYE,IAAM,mBAClBF,EAAYG,IAAM,SACXN,EAAYI,SAAS,SAAWJ,EAAYI,SAAS,SAC5DD,EAAYE,IAAM,mBAClBF,EAAYG,IAAM,SACXN,EAAYI,SAAS,kBAAoBJ,EAAYI,SAAS,iBACrED,EAAYE,IAAM,2BAClBF,EAAYG,IAAM,iBACXN,EAAYI,SAAS,SAC5BD,EAAYE,IAAM,mBAClBF,EAAYG,IAAM,SACXN,EAAYI,SAAS,SAC5BD,EAAYG,IAAM,SAElBH,EAAYE,IAAM,qBAClBF,EAAYG,IAAM,wBAK1BtB,SAASuB,KAAKC,MAAMC,gBAMpB,SAAuBC,GACnB,OAAQA,GACR,IAAK,QAAS,MAAO,UACrB,IAAK,SACL,IAAK,QAAS,MAAO,UACrB,IAAK,OACL,IAAK,OAAQ,MAAO,UAEpB,QAAS,MAAO,QAEpB,CAhBsCC,CAAcf,EAAKc,UACzD,MACIE,MAAMhB,EAAKiB,MAcf,G","sources":["index.js"],"sourcesContent":["// public/script.js\ndocument.getElementById('weather-form').addEventListener('submit', async (e) => {\n    e.preventDefault();\n    const city = document.getElementById('city').value;\n    const state = document.getElementById('state').value;\n    const response = await fetch(`/weather?city=${city}&state=${state}`);\n    const data = await response.json();\n\n    // If no issues then execute\n    if (response.ok) {\n        document.getElementById('weather-in').innerText = `Weather in ${city}, ${state}`;\n        document.getElementById('description').innerText = `${data.description}`;\n        document.getElementById('temperature').innerText = `Temperature: ${data.temperature}Â°F`;\n        document.getElementById('wind-speed').innerText = `Wind Speed: ${data.wind_speed} mph`;\n\n        const description = data.description; \n        const weatherIcon = document.getElementById('weather-icon');\n\n        // Set image source, description\n        if (description.includes(\"clouds\")) {\n            weatherIcon.src = \"/icons/clouds.webp\";\n            weatherIcon.alt = \"Overcast\";\n        } else if (description.includes(\"sun\") ){//|| description.includes(\"clear\")) {\n            weatherIcon.src = \"/icons/sunny.png\";\n            weatherIcon.alt = \"Sunny\";\n        } else if (description.includes(\"rain\") || description.includes(\"mist\")) {\n            weatherIcon.src = \"/icons/rain.webp\";\n            weatherIcon.alt = \"Rainy\";\n        } else if (description.includes(\"partly cloudy\") || description.includes(\"partly sunny\")) {\n            weatherIcon.src = \"/icons/partly-cloudy.png\";\n            weatherIcon.alt = \"Partly Cloudy\";\n        } else if (description.includes(\"mist\")) {\n            weatherIcon.src = \"/icons/mist.jpeg\";\n            weatherIcon.alt = \"Rainy\";\n        } else if (description.includes(\"smoke\")) {\n            weatherIcon.alt = \"Smoke\";\n        }else {\n            weatherIcon.src = \"/icons/default.png\";\n            weatherIcon.alt = \"Default Weather Icon\";\n        } \n\n    \n    // Get data and change the background color depending on condition (calling funciton)\n    document.body.style.backgroundColor = getThemeColor(data.condition);\n    } else {\n        alert(data.error);\n    }\n\n    // Function has cases for different conditions. \n    function getThemeColor(condition) {\n        switch (condition) {\n        case 'Clear': return '#d8f0f2';\n        case 'Clouds': return '#d5dfe0';\n        case 'Smoke': return '#d5dfe0';\n        case 'Rain': return '#c1d7e6';\n        case 'Mist': return '#c1d7e6';\n\n        default: return 'white';\n        }\n    }\n    \n});\n\n  \n"],"names":["document","getElementById","addEventListener","async","e","preventDefault","city","value","state","response","fetch","concat","data","json","ok","innerText","description","temperature","wind_speed","weatherIcon","includes","src","alt","body","style","backgroundColor","condition","getThemeColor","alert","error"],"sourceRoot":""}